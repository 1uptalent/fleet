---
- hosts: all
  sudo: yes
  vars:
    openvswitch_deps:
      - linux-headers-3.11.0-12-generic
      - openvswitch-datapath-dkms
      - bridge-utils
    docker_deps:
      - python-software-properties
      - python-apt
      - python-pycurl
  tasks:

    - name: Firewall configuration
      command: ufw allow from 10.10.0.0/16
      tags: firewall config

    - name: Firewall configuration
      command: ufw allow from 192.168.250.0/24
      tags: firewall config

    - name: Enable traffic in firewall
      lineinfile: dest=/etc/default/ufw state=present regexp='DEFAULT_FORWARD_POLICY="(.*)"' line='DEFAULT_FORWARD_POLICY="ACCEPT"'
      tags: firewall config

    - name: Restart firewall
      command: ufw reload
      tags: firewall config

    - name: OpenVSwitch dependencies
      apt: pkg={{ item }} state=present update_cache=yes cache_valid_time=14400
      with_items: openvswitch_deps
      tags: network repo

    - name: Install OpenVSwitch
      apt: pkg=openvswitch-switch state=present update_cache=yes cache_valid_time=14400
      tags: network repo

    - name: Copy configuration for bridges and tunnels
      copy: src=../provisioning_scripts/prepare_docker_network.sh dest=/tmp/prepare_docker_network.sh mode=0755
      tags: network configure

    - name: Configure bridges and tunnels
      command: /tmp/prepare_docker_network.sh {{host_id}} "{{other_hosts}}"
      tags: network configure
      when: ansible_docker0 is not defined

    - name: Copy routes config
      copy: src=../provisioning_scripts/route_docker_network.sh dest=/tmp/route_docker_network.sh mode=0755
      tags: network configure

    - name: Configure docker routes
      command: /tmp/route_docker_network.sh
      tags: network configure

    - name: Docker dependencies
      apt: pkg={{ item }} state=present update_cache=yes cache_valid_time=14400
      with_items: docker_deps
      tags: docker repo

    - name: Add docker repository key
      #apt_key: url=https://get.docker.io/gpg state=present
      apt_key: |
        state=present
        data="-----BEGIN PGP PUBLIC KEY BLOCK-----
        Version: GnuPG v1.4.14 (GNU/Linux)
        
        mQENBFIOqEUBCADsvqwefcPPQArws9jHF1PaqhXxkaXzeE5uHHtefdoRxQdjoGok
        HFmHWtCd9zR7hDpHE7Q4dwJtSFWZAM3zaUtlvRAgvMmfLm08NW9QQn0CP5khjjF1
        cgckhjmzQAzpEHO5jiSwl0ZU8ouJrLDgmbhT6knB1XW5/VmeECqKRyhlEK0zRz1a
        XV+4EVDySlORmFyqlmdIUmiU1/6pKEXyRBBVCHNsbnpZOOzgNhfMz8VE8Hxq7Oh8
        1qFaFXjNGCrNZ6xr/DI+iXlsZ8urlZjke5llm4874N8VPUeFQ/szmsbSqmCnbd15
        LLtrpvpSMeyRG+LoTYvyTG9QtAuewL9EKJPfABEBAAG0OURvY2tlciBSZWxlYXNl
        IFRvb2wgKHJlbGVhc2Vkb2NrZXIpIDxkb2NrZXJAZG90Y2xvdWQuY29tPokBOAQT
        AQIAIgUCUg6oRQIbLwYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AACgkQ2Fdqi6iN
        IenM+QgAnOiozhHDAYGO92SmZjib6PK/1djbrDRMreCT8bnzVpriTOlEtARDXsmX
        njKSFa+HTxHi/aTNo29TmtHDfUupcfmaI2mXbZt1ixXLuwcMv9sJXKoeWwKZnN3i
        9vAM9/yAJz3aq+sTXeG2dDrhZr34B3nPhecNkKQ4v6pnQy43Mr59Fvv5CzKFa9oZ
        IoZf+Ul0F90HSw5WJ1NsDdHGrAaHLZfzqAVrqHzazw7ghe94k460T8ZAaovCaTQV
        HzTcMfJdPz/uTim6J0OergT9njhtdg2ugUj7cPFUTpsxQ1i2S8qDEQPL7kabAZZo
        Pim0BXdjsHVftivqZqfWeVFKMorchQ==
        =fRgo
        -----END PGP PUBLIC KEY BLOCK-----"
      tags: docker repo

    - name: Add docker repository
      apt_repository: repo='deb http://get.docker.io/ubuntu docker main' state=present
      tags: docker repo

    - name: Create the docker group
      user: name=docker state=present

    - name: Add ansible user to the docker group
      user: name={{ ansible_ssh_user }} groups=docker append=true

    - name: Install docker
      apt: pkg=lxc-docker state=present update_cache=yes cache_valid_time=14400
      tags: docker repo

    - name: Refresh facts to learn about the new network interfaces
      setup: ''

    - name: Reconfigure docker
      lineinfile: >
        dest=/etc/init/docker.conf
        state=present
        regexp='( *DOCKER_OPTS=).*' 
        line='\1"--dns {{ facter_ipaddress_docker0 }}"'
        backrefs=yes

    - name: Apply docker configuration
      shell: stop docker ; start docker

    - name: Pull Skydns
      command: docker pull crosbymichael/skydns

    - name: Pull Skydock
      command: docker pull crosbymichael/skydock

    - name: Install skydns master
      command: >
        docker run -d 
                   -p {{ facter_ipaddress_docker0 }}:53:53/udp 
                   -p {{ facter_ipaddress_docker0 }}:8080:8080/tcp 
                   -name skydns
                   --entrypoint /bin/bash
                   crosbymichael/skydns
                   -c 'skydns -http $(hostname -i):8080 -dns $(hostname -i):53 -nameserver 8.8.8.8:53 -domain docker'
      when: dns_leader is not defined

    - name: Wait for master
      wait_for: host={{ facter_ipaddress_docker0 }} port=8080 timeout=30
      when: dns_leader is not defined

    - name: Install skydock on master
      command: >
        docker run -d -v /var/run/docker.sock:/docker.sock 
                   -name skydock 
                   -link skydns:skydns 
                   crosbymichael/skydock 
                   -ttl 30 
                   -s /docker.sock 
                   -environment dev 
                   -domain docker
      when: dns_leader is not defined

    - name: Install skydns on slaves
      command: >
        docker run -d -p {{ facter_ipaddress_docker0 }}:53:53/udp 
                   -name skydns
                   --dns {{ dns_leader }}
                   --entrypoint bash
                   crosbymichael/skydns
                   -c 'skydns -http $(hostname -i):8080 -dns $(hostname -i):53 -nameserver 8.8.8.8:53 -domain docker -join master.docker:8080'
      when: dns_leader is defined

    - name: Install skydock on slaves
      #
      # BUG: This should work, but the skydns api client does not handle the redirection to the master
      # See: https://github.com/skynetservices/skydns/pull/79
      #
      # command: >
      #   docker run -d -v /var/run/docker.sock:/docker.sock 
      #              -name skydock 
      #              -link skydns:skydns 
      #              crosbymichael/skydock 
      #              -ttl 30 
      #              -s /docker.sock 
      #              -environment dev 
      #              -domain docker

      #
      # WORKAROUND: Set the skydnsUrl to the master. I guess this can break if a new master is elected
      command: >
        docker run -d -v /var/run/docker.sock:/docker.sock 
                   -name skydock 
                   crosbymichael/skydock 
                   --skydns http://master.docker:8080
                   -ttl 30 
                   -s /docker.sock 
                   -environment dev 
                   -domain docker
      when: dns_leader is defined


