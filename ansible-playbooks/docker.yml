---
- hosts: all
  sudo: yes
  vars:
    bridge_network: 10.10.{{ host_id | mandatory }}.0
    bridge_address: 10.10.{{ host_id }}.1
    bridge_mask: 255.255.255.0
    union_address: 192.168.250.{{ host_id}}
    union_mask: 255.255.255.0
    route_network: 10.10.0.0
    route_netmask: 255.255.0.0 
  roles:
    - role: docker_cluster
      gre_tunnel_to_hosts: "{{ other_hosts.split() }}"

    - role: bennojoy.network_interface
      network_ether_interfaces:
        - device: tep0
          bootproto: static
          address: "{{ union_address }}"
          netmask: "{{ union_mask }}"
          route:
            - network: "{{ route_network }} "
              netmask: "{{ route_netmask }}"
              gateway: "{{ union_address }}"
              device: tep0
      network_bridge_interfaces:
        - device: docker0
          type: bridge
          address: "{{ bridge_address }}"
          netmask: "{{ bridge_mask }}"
          bootproto: static
          ports: 
            - "{{ ovs_bridge_name }}"
    - role: angstwad.docker_ubuntu

  tasks:
    - name: Firewall configuration
      command: ufw allow from 10.10.0.0/16
      tags: firewall config

    - name: Firewall configuration
      command: ufw allow from 192.168.250.0/24
      tags: firewall config

    - name: Enable traffic in firewall
      lineinfile: dest=/etc/default/ufw state=present regexp='DEFAULT_FORWARD_POLICY="(.*)"' line='DEFAULT_FORWARD_POLICY="ACCEPT"'
      tags: firewall config

    - name: Restart firewall
      command: ufw reload
      tags: firewall config

    - name: Add ansible user to the docker group
      user: name={{ ansible_ssh_user }} groups=docker append=true

    - name: Refresh facts to learn about the new network interfaces
      setup: ''

    - name: Reconfigure docker
      lineinfile: >
        dest=/etc/init/docker.conf
        state=present
        regexp='( *DOCKER_OPTS=).*' 
        line='\1"--dns {{ facter_ipaddress_docker0 }}"'
        backrefs=yes

    - name: Apply docker configuration
      shell: stop docker ; start docker

    - name: Pull Skydns
      command: docker pull crosbymichael/skydns

    - name: Pull Skydock
      command: docker pull crosbymichael/skydock

    - name: Install skydns master
      command: >
        docker run -d 
                   -p {{ facter_ipaddress_docker0 }}:53:53/udp 
                   -p {{ facter_ipaddress_docker0 }}:8080:8080/tcp 
                   -name skydns
                   --entrypoint /bin/bash
                   crosbymichael/skydns
                   -c 'skydns -http $(hostname -i):8080 -dns $(hostname -i):53 -nameserver 8.8.8.8:53 -domain docker'
      when: dns_leader is not defined

    - name: Wait for master
      wait_for: host={{ facter_ipaddress_docker0 }} port=8080 timeout=30
      when: dns_leader is not defined

    - name: Install skydock on master
      command: >
        docker run -d -v /var/run/docker.sock:/docker.sock 
                   -name skydock 
                   -link skydns:skydns 
                   crosbymichael/skydock 
                   -ttl 30 
                   -s /docker.sock 
                   -environment dev 
                   -domain docker
      when: dns_leader is not defined

    - name: Install skydns on slaves
      command: >
        docker run -d -p {{ facter_ipaddress_docker0 }}:53:53/udp 
                   -name skydns
                   --dns {{ dns_leader }}
                   --entrypoint bash
                   crosbymichael/skydns
                   -c 'skydns -http $(hostname -i):8080 -dns $(hostname -i):53 -nameserver 8.8.8.8:53 -domain docker -join master.docker:8080'
      when: dns_leader is defined

    - name: Install skydock on slaves
      #
      # BUG: This should work, but the skydns api client does not handle the redirection to the master
      # See: https://github.com/skynetservices/skydns/pull/79
      #
      # command: >
      #   docker run -d -v /var/run/docker.sock:/docker.sock 
      #              -name skydock 
      #              -link skydns:skydns 
      #              crosbymichael/skydock 
      #              -ttl 30 
      #              -s /docker.sock 
      #              -environment dev 
      #              -domain docker

      #
      # WORKAROUND: Set the skydnsUrl to the master. I guess this can break if a new master is elected
      command: >
        docker run -d -v /var/run/docker.sock:/docker.sock 
                   -name skydock 
                   crosbymichael/skydock 
                   --skydns http://master.docker:8080
                   -ttl 30 
                   -s /docker.sock 
                   -environment dev 
                   -domain docker
      when: dns_leader is defined


